Source: libtld
Priority: optional
Maintainer: Alexis Wilke <alexis@m2osw.com>
Build-Depends: cmake,
    debhelper,
    doxygen,
    graphviz,
    snapcmakemodules (>= 1.0.35.3~jammy)
Standards-Version: 3.9.4
Section: libs
Homepage: https://snapwebsites.org/project/libtld
Vcs-Git: https://github.com/m2osw/snapcpp.git
Vcs-Browser: https://github.com/m2osw/libtld

Package: libtld
Architecture: any
Section: libs
Depends: ${shlibs:Depends}, ${misc:Depends}
Suggests: libtld-compiler
Description: C/C++ library used to verify domain names by extracting their TLD
 Runtime library of the libtld project.
 .
 A URL is composed of a protocol, a domain name, a path, a query string, and
 an anchor. The query string and anchor are optional. The protocol is most
 often very easy to verify. The domain name, however, can be very complicated
 if you need to know of the sub-domains, the very domain name itself, and the
 TLD. The libtld helps you with pointing out where the TLD starts in the
 domain name. That way you can extract the sub-domains, the domain name itself
 and the TLD for any world-wide URI. Note that this is very important if you
 manage cookies in a browser.

Package: libtld-compiler
Architecture: any
Section: libs
Depends: libtld (= ${binary:Version}), ${misc:Depends}
Description: C/C++ library used to verify domain names by extracting their TLD
 TLD Compiler and TLD source files (.ini).
 .
 To make it all work, we need to have a list of all the currently valid TLDs.
 Then we compile those TLDs in a binary format which can be loaded and used
 instantly. This package includes the compiler used to compile the .ini file
 that define all the TLDs. The package also includes manual pages about the
 compiler and the .ini file format. This is useful if you need to tweak some
 of the existing TLDs or add your own.

Package: libtld-dev
Architecture: any
Section: libdevel
Depends: libtld (= ${binary:Version}), ${misc:Depends}
Description: C/C++ library used to verify domain names by extracting their TLD
 Development files (header and static library.)
 .
 A URL is composed of a protocol, a domain name, a path, a query string, and
 an anchor. The query string and anchor are optional. The protocol is most
 often very easy to verify. The domain name, however, can be very complicated
 if you need to know of the sub-domains, the very domain name itself, and the
 TLD. The libtld helps you with pointing out where the TLD starts in the
 domain name. That way you can extract the sub-domains, the domain name itself
 and the TLD for any world-wide URI. Note that this is very important if you
 manage cookies in a browser.

Package: libtld-doc
Architecture: all
Section: doc
Depends: ${misc:Depends}
Suggests: libtld, libtld-compiler
Description: C/C++ library used to verify domain names by extracting their TLD
 Documentation on how to use the libtld library.
 .
 A URL is composed of a protocol, a domain name, a path, a query string, and
 an anchor. The query string and anchor are optional. The protocol is most
 often very easy to verify. The domain name, however, can be very complicated
 if you need to know of the sub-domains, the very domain name itself, and the
 TLD. The libtld helps you with pointing out where the TLD starts in the
 domain name. That way you can extract the sub-domains, the domain name itself
 and the TLD for any world-wide URI. Note that this is very important if you
 manage cookies in a browser.

# vim: ts=4 sw=4 et
